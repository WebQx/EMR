# WebQXâ„¢ EMR Apache Virtual Host Configuration

<VirtualHost *:80>
    ServerName webqx-emr.local
    ServerAlias *.webqx-emr.local
    DocumentRoot /var/www/html
    
    # Security headers
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options SAMEORIGIN
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-src 'self';"
    
    # WebQX specific directories
    <Directory "/var/www/html">
        Options -Indexes +FollowSymLinks
        AllowOverride All
        Require all granted
        
        # PHP configuration
        php_admin_value max_execution_time 300
        php_admin_value memory_limit 512M
        php_admin_value upload_max_filesize 100M
        php_admin_value post_max_size 100M
    </Directory>
    
    # Secure sensitive directories
    <Directory "/var/www/html/core">
        Options -Indexes
        AllowOverride None
        Require all denied
    </Directory>
    
    <Directory "/var/www/html/config">
        Options -Indexes
        AllowOverride None
        Require all denied
    </Directory>
    
    <Directory "/var/www/html/docker">
        Options -Indexes
        AllowOverride None
        Require all denied
    </Directory>
    
    # Allow API access
    <Directory "/var/www/html/api">
        Options -Indexes
        AllowOverride All
        Require all granted
        
        # CORS headers for API
        Header always set Access-Control-Allow-Origin "*"
        Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    </Directory>
    
    # Static assets optimization
    <Directory "/var/www/html/themes">
        Options -Indexes
        AllowOverride None
        Require all granted
        
        # Cache static assets
        ExpiresActive On
        ExpiresByType text/css "access plus 1 month"
        ExpiresByType application/javascript "access plus 1 month"
        ExpiresByType image/png "access plus 1 year"
        ExpiresByType image/jpg "access plus 1 year"
        ExpiresByType image/jpeg "access plus 1 year"
        ExpiresByType image/gif "access plus 1 year"
        ExpiresByType image/svg+xml "access plus 1 year"
        ExpiresByType font/woff "access plus 1 year"
        ExpiresByType font/woff2 "access plus 1 year"
        
        # Compression
        SetOutputFilter DEFLATE
        SetEnvIfNoCase Request_URI \
            \.(?:gif|jpe?g|png)$ no-gzip dont-vary
        SetEnvIfNoCase Request_URI \
            \.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
    </Directory>
    
    # Uploads directory
    <Directory "/var/www/html/uploads">
        Options -Indexes
        AllowOverride None
        Require all granted
        
        # Prevent execution of PHP files in uploads
        php_flag engine off
        AddType text/plain .php .php3 .phtml .pht
    </Directory>
    
    # Logs directory
    <Directory "/var/www/html/logs">
        Options -Indexes
        AllowOverride None
        Require all denied
    </Directory>
    
    # URL Rewriting for clean URLs
    RewriteEngine On

    # Django Auth Service Reverse Proxy (Phase 1 Integration)
    # Requires proxy modules: a2enmod proxy proxy_http
    ProxyPreserveHost On
    ProxyPass /auth/ http://webqx-django-auth:8000/auth/
    ProxyPassReverse /auth/ http://webqx-django-auth:8000/auth/
    
    # Redirect to HTTPS in production
    # RewriteCond %{HTTPS} off
    # RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    # API routing
    RewriteCond %{REQUEST_URI} ^/api/
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^api/(.*)$ /api/webqx-api.php/$1 [QSA,L]
    
    # WebQX module routing
    RewriteCond %{REQUEST_URI} ^/modules/
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^modules/([^/]+)/(.*)$ /modules/$1/index.php?route=$2 [QSA,L]
    
    # Main application routing
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} !^/api/
    RewriteCond %{REQUEST_URI} !^/modules/
    RewriteRule ^(.*)$ /index.php?route=$1 [QSA,L]
    
    # Error and access logs
    ErrorLog /var/log/apache2/webqx_error.log
    CustomLog /var/log/apache2/webqx_access.log combined
    LogLevel warn
    
    # Compression
    SetOutputFilter DEFLATE
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
    
    # Set environment variables
    SetEnv WEBQX_ENV development
    SetEnv WEBQX_VERSION 1.0.0
    SetEnv WEBQX_DEBUG true
</VirtualHost>

# HTTPS Virtual Host (for production)
<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerName webqx-emr.local
    ServerAlias *.webqx-emr.local
    DocumentRoot /var/www/html
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/ssl/certs/webqx-emr.crt
    SSLCertificateKeyFile /etc/ssl/private/webqx-emr.key
    SSLCertificateChainFile /etc/ssl/certs/webqx-emr-chain.crt
    
    # SSL Security
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    SSLHonorCipherOrder off
    SSLSessionTickets off
    
    # HSTS
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
    
    # Copy all configuration from HTTP virtual host
    Include /etc/apache2/sites-available/000-default.conf
</VirtualHost>
</IfModule>
