name: Node.js CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**.js'
      - '**.ts'
      - '**.json'
      - 'package*.json'
      - '.github/workflows/nodejs.yml'
      - '!python-app/**'
      - '!ruby-app/**'
  pull_request:
    branches: [ main ]
    paths:
      - '**.js'
      - '**.ts'
      - '**.json'
      - 'package*.json'
      - '!python-app/**'
      - '!ruby-app/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run type-check
    
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
    
    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        NODE_ENV: test
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '18.x'
      with:
        file: ./coverage/lcov.info
        flags: nodejs
        name: codecov-nodejs

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: |
        # Add build step if needed
        echo "Application built successfully"
    
    - name: Create deployment package
      run: |
        tar -czf webqx-nodejs.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=__tests__ \
          --exclude=coverage \
          --exclude=python-app \
          --exclude=ruby-app \
          .
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webqx-nodejs-build
        path: webqx-nodejs.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: webqx-nodejs-build
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME_NODEJS }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        healthcheck: "https://${{ secrets.HEROKU_APP_NAME_NODEJS }}.herokuapp.com/health"
        checkstring: "healthy"
        delay: 5
        rollbackonhealthcheckfailed: true