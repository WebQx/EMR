# WebQX Healthcare Platform - Notification Test
# Test workflow to verify notification integrations

name: Test Notifications

on:
  workflow_dispatch:
    inputs:
      notification_type:
        description: 'Type of notification to test'
        required: true
        type: choice
        options:
          - deployment_success
          - deployment_failure
          - rollback_initiated
          - security_alert
          - health_check_failure
      message:
        description: 'Custom test message'
        required: false
        default: 'This is a test notification from WebQX CI/CD pipeline'

jobs:
  test-slack-notification:
    name: Test Slack Notification
    runs-on: ubuntu-latest
    if: vars.SLACK_WEBHOOK_URL != ''
    
    steps:
    - name: Send test notification
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        custom_payload: |
          {
            "text": "üß™ WebQX Healthcare Platform - Notification Test",
            "attachments": [
              {
                "color": "${{ 
                  github.event.inputs.notification_type == 'deployment_success' && 'good' ||
                  github.event.inputs.notification_type == 'deployment_failure' && 'danger' ||
                  github.event.inputs.notification_type == 'rollback_initiated' && 'warning' ||
                  github.event.inputs.notification_type == 'security_alert' && 'danger' ||
                  github.event.inputs.notification_type == 'health_check_failure' && 'warning' ||
                  '#36a64f'
                }}",
                "fields": [
                  {
                    "title": "Test Type",
                    "value": "${{ github.event.inputs.notification_type }}",
                    "short": true
                  },
                  {
                    "title": "Triggered By",
                    "value": "${{ github.actor }}",
                    "short": true
                  },
                  {
                    "title": "Timestamp",
                    "value": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
                    "short": true
                  },
                  {
                    "title": "Environment",
                    "value": "Test",
                    "short": true
                  },
                  {
                    "title": "Message",
                    "value": "${{ github.event.inputs.message }}",
                    "short": false
                  }
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  test-github-notification:
    name: Test GitHub Notification
    runs-on: ubuntu-latest
    
    steps:
    - name: Create test issue
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `üß™ Notification Test: ${context.payload.inputs.notification_type}`,
            body: `
          ## Notification Test Results
          
          - **Test Type**: ${context.payload.inputs.notification_type}
          - **Triggered By**: ${context.actor}
          - **Timestamp**: ${new Date().toISOString()}
          - **Message**: ${context.payload.inputs.message}
          - **Workflow Run**: ${context.runId}
          
          This is an automated test of the notification system. This issue can be closed after review.
            `,
            labels: ['test', 'notification', 'ci-cd']
          });
          
          core.info(`Created test issue #${issue.data.number}`);

  test-health-check:
    name: Test Health Check Monitoring
    runs-on: ubuntu-latest
    
    steps:
    - name: Simulate health check monitoring
      run: |
        echo "Testing health check monitoring simulation..."
        
        # Simulate different health check scenarios
        case "${{ github.event.inputs.notification_type }}" in
          "health_check_failure")
            echo "üö® Simulating health check failure scenario"
            echo "Health Status: FAILED"
            echo "Response Time: 5000ms (SLOW)"
            echo "Error: Connection timeout"
            exit 1
            ;;
          "deployment_success")
            echo "‚úÖ Simulating successful health check"
            echo "Health Status: HEALTHY"
            echo "Response Time: 150ms"
            echo "All systems operational"
            ;;
          "deployment_failure")
            echo "‚ùå Simulating deployment failure scenario"
            echo "Deployment Status: FAILED"
            echo "Error: Build failed or health checks not passing"
            exit 1
            ;;
          *)
            echo "‚ÑπÔ∏è  Running standard health check simulation"
            echo "Health Status: HEALTHY"
            echo "Response Time: 200ms"
            ;;
        esac

  notification-summary:
    name: Notification Test Summary
    runs-on: ubuntu-latest
    needs: [test-slack-notification, test-github-notification, test-health-check]
    if: always()
    
    steps:
    - name: Generate test report
      run: |
        echo "## üß™ WebQX Notification Test Report"
        echo ""
        echo "| Test Component | Status | Notes |"
        echo "|----------------|--------|-------|"
        
        # Slack notification test
        if [ "${{ needs.test-slack-notification.result }}" = "success" ]; then
          echo "| Slack Integration | ‚úÖ Success | Notification sent successfully |"
        elif [ "${{ needs.test-slack-notification.result }}" = "skipped" ]; then
          echo "| Slack Integration | ‚è≠Ô∏è Skipped | SLACK_WEBHOOK_URL not configured |"
        else
          echo "| Slack Integration | ‚ùå Failed | Check webhook URL and permissions |"
        fi
        
        # GitHub notification test
        if [ "${{ needs.test-github-notification.result }}" = "success" ]; then
          echo "| GitHub Integration | ‚úÖ Success | Test issue created successfully |"
        else
          echo "| GitHub Integration | ‚ùå Failed | Check repository permissions |"
        fi
        
        # Health check monitoring test
        if [ "${{ needs.test-health-check.result }}" = "success" ]; then
          echo "| Health Check Monitoring | ‚úÖ Success | Monitoring simulation completed |"
        else
          echo "| Health Check Monitoring | ‚ùå Failed | Simulated failure scenario |"
        fi
        
        echo ""
        echo "**Test Type**: ${{ github.event.inputs.notification_type }}"
        echo "**Triggered By**: ${{ github.actor }}"
        echo "**Test Message**: ${{ github.event.inputs.message }}"
        echo "**Completed At**: $(date -u +%Y-%m-%dT%H:%M:%SZ)"
        
        # Overall status
        if [ "${{ needs.test-slack-notification.result }}" != "failure" ] && \
           [ "${{ needs.test-github-notification.result }}" = "success" ]; then
          echo ""
          echo "üéâ **Notification system test completed successfully!**"
        else
          echo ""
          echo "‚ö†Ô∏è **Some notification tests failed. Please review the results above.**"
        fi